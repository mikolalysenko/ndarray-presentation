{
  "name": "ndarray-sort",
  "version": "0.1.0",
  "description": "Sorts ndarrays in place",
  "main": "sort.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "typedarray-pool": "~0.1.1"
  },
  "devDependencies": {
    "ndarray-ops": "~1.1.1",
    "ndarray-pack": "~1.0.1",
    "ndarray": "~1.0.5",
    "ndarray-unpack": "~0.0.0",
    "tape": "~1.0.4",
    "crossfilter": "~1.2.0"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/ndarray-sort.git"
  },
  "keywords": [
    "ndarray",
    "sort",
    "typed",
    "array",
    "int",
    "quicksort"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "12e9c82d410e74e0137a5de773e931b1c6366eb0",
  "bugs": {
    "url": "https://github.com/mikolalysenko/ndarray-sort/issues"
  },
  "readme": "ndarray-sort\n============\nSorts [ndarrays](https://github.com/mikolalysenko/ndarray) in place using a dual pivot quick sort.\n\n## Example\n\n```javascript\nvar ndarray = require(\"ndarray\")\nvar ndsort = require(\"ndarray-sort\")\nvar unpack = require(\"ndarray-unpack\")\n\n//Create an array\nvar x = ndarray(new Float32Array(60), [20, 3])\n\nfor(var i=0; i<20; ++i) {\n  for(var j=0; j<3; ++j) {\n    x.set(i,j, Math.random())\n  }\n}\n\n//Print out x:\nconsole.log(\"Unsorted:\", unpack(x))\n\n//Sort x\nndsort(x)\n\n//Print out sorted x:\nconsole.log(\"Sorted:\", unpack(x))\n```\n\n## Install\n\n    npm install ndarray-sort\n\n## API\n\n### `require(\"ndarray-sort\")(array)`\nSorts the given array along the first axis in lexicographic order.  The sorting is done in place.\n\n* `array` is an ndarray\n\n**Returns** `array`\n\n## Credits\nBased on Google Dart's dual pivot quick sort implementation by Ola Martin Bini and Michael Haubenwallner.  For more information see lib/dart/AUTHORS and lib/dart/LICENSE\n\nJavaScript implementation (c) 2013 Mikola Lysenko.  MIT License",
  "homepage": "https://github.com/mikolalysenko/ndarray-sort",
  "_id": "ndarray-sort@0.1.0",
  "_from": "ndarray-sort@"
}
