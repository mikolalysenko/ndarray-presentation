{
  "name": "glsl-extract",
  "version": "0.0.2",
  "description": "extract uniforms and attributes from glsl programs",
  "main": "index.js",
  "scripts": {
    "test": "node test/index.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisdickinson/glsl-extract.git"
  },
  "keywords": [
    "extract",
    "glsl",
    "uniforms",
    "attributes"
  ],
  "author": {
    "name": "Chris Dickinson",
    "email": "chris@neversaw.us"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/chrisdickinson/glsl-extract/issues"
  },
  "dependencies": {
    "glsl-parser": "0.0.5",
    "glsl-tokenizer": "0.0.8",
    "cssauron-glsl": "0.0.0",
    "utf8-stream": "0.0.0",
    "through": "~2.3.4",
    "glsl-deparser": "0.0.2"
  },
  "devDependencies": {
    "tape": "~1.0.4",
    "jsl": "0.0.7",
    "duplexer": "~0.1.1"
  },
  "readme": "# glsl-extract\n\nextract attribute and uniform data from glsl files, no matter how nested.\n\n```javascript\nvar extract = require('glsl-extract')\n\nextract(fs.createReadStream('test.glsl'))(function(err, info) {\n  {attributes, uniforms} = info\n  for(var def of uniforms) {\n    {name, type} = def  // where \"name\" is the full dotted, array'd\n                        // gl.getUniformLocation lookup path and\n                        // type is the declared type.\n  }\n})\n\nextract(\"also works with just text\")(function(err, info) {\n  // should execute on same frame.\n})\n\n```\n\n# api\n\n### extract(ReadableStream | String | Buffer[, getContextFunction) -> Continuable\n\nGiven a readable stream, string, or buffer, return a continuable that will trigger\nparsing. The continuable will call its callback with `err` (if any), and `data`,\nwhere `data` is comprised of `{attributes:[GLSLLocation], uniforms:[GLSLLocation]}`.\n\n### GLSLLocation\n\nA GLSLLocation is just a plain object containing `name` (the appropriate name to\npass to `gl.getUniformLocation`) and `type` (one of the primitive GLSL types).\n\n# license\n\nMIT\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/chrisdickinson/glsl-extract",
  "_id": "glsl-extract@0.0.2",
  "_from": "glsl-extract@0.0.2"
}
