{
  "name": "game-shell-orbit-camera",
  "version": "0.0.0",
  "description": "Attaches an orbit-camera to a game-shell with default key bindings",
  "main": "camera.js",
  "directories": {
    "example": "example"
  },
  "dependencies": {
    "orbit-camera": "~0.0.1"
  },
  "devDependencies": {
    "gl-matrix": "~2.0.0",
    "gl-mesh": "~0.1.0",
    "simple-3d-shader": "~0.0.0",
    "gl-now": "~0.0.3",
    "bunny": "~1.0.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/game-shell-orbit-camera.git"
  },
  "keywords": [
    "camera",
    "webgl",
    "3d",
    "orbit",
    "quaternion",
    "game-shell",
    "orbit-camera",
    "arcball",
    "rotation",
    "default",
    "key"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "5684ecf1af817473d8fa58952837540c2ef45ba0",
  "bugs": {
    "url": "https://github.com/mikolalysenko/game-shell-orbit-camera/issues"
  },
  "readme": "game-shell-orbit-camera\n=======================\nCreates a default orbit camera controller for a [game-shell](https://github.com/mikolalysenko/game-shell) instance.  The controls for this are as follows:\n\n* Rotate - Left click\n* Pan - Right click or Control + Left click\n* Zoom - Scroll or Shift + Left click\n\n## Example\n\n\"use strict\"\n\n```javascript\nvar shell = require(\"gl-now\")()\nvar createMesh = require(\"gl-mesh\")\nvar simple3DShader = require(\"simple-3d-shader\")\nvar attachCamera = require(\"game-shell-orbit-camera\")\nvar glm = require(\"gl-matrix\")\nvar mat4 = glm.mat4\n\nvar shader, mesh\nvar camera = attachCamera(shell)\n\ncamera.lookAt([0, 3, 20], [0, 3, 0], [0, 1, 0])\n\nshell.on(\"gl-init\", function() {\n  shader = simple3DShader(shell.gl)\n  mesh = createMesh(shell.gl, require(\"bunny\"))\n})\n\nshell.on(\"gl-render\", function(t) {\n  //Bind shader\n  shader.bind()\n\n  //Set camera parameters\n  var scratch = mat4.create()\n  shader.uniforms.model = scratch\n  shader.uniforms.projection = mat4.perspective(scratch, Math.PI/4.0, shell.width/shell.height, 0.1, 1000.0)\n  shader.uniforms.view = camera.view(scratch)\n  \n  //Draw object\n  mesh.bind(shader)\n  mesh.draw()\n  mesh.unbind()\n})\n```\n\n## Install\n\n    npm install game-shell-orbit-camera\n\n\n### `require(\"game-shell-orbit-camera\")(shell)`\nAttaches a camera to the game-shell instance\n\n**Returns** An instance of [`orbit-camera`](https://github.com/mikolalysenko/orbit-camera)\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License\n",
  "homepage": "https://github.com/mikolalysenko/game-shell-orbit-camera",
  "_id": "game-shell-orbit-camera@0.0.0",
  "_from": "game-shell-orbit-camera@"
}
