{
  "name": "dirichlet",
  "version": "0.0.0",
  "description": "Dirichlet/aliased sinc function",
  "main": "dirichlet.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "almost-equal": "^0.0.0"
  },
  "devDependencies": {
    "tap": "~0.4.8",
    "tape": "~2.4.0"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/dirichlet.git"
  },
  "keywords": [
    "dirichlet",
    "aliased",
    "sinc",
    "rect",
    "fourier",
    "transform",
    "lanczos"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mikolalysenko/dirichlet/issues"
  },
  "homepage": "https://github.com/mikolalysenko/dirichlet",
  "readme": "dirichlet\n=========\nThe Dirichlet (or aliased sinc) function.  Defined to be,\n\n```\n                  { 1                                   if x % n === 0\ndirichlet(n, x) = {           \n                  { sin(pi * x) / (n * sin(pi * x / n)) otherwise\n```\n\nAlternatively, it is the inverse Fourier transform of the discrete rectangle function.\n\n## Example\n\n```javascript\nvar dirichlet = require(\"dirichlet\")\nvar x = require(\"iota-array\")(200)\nvar y = x.map(dirichlet.bind(null, 100))\n\nconsole.log(x, y)\n```\n\n## Install\n\n```\nnpm install dirichlet\n```\n\n## API\n\n### `require(\"dirichlet\")(n, x)`\nReturns the value of the dirichlet function\n\n* `n` is the number of samples\n* `x` is the point at which the dirichlet function is evaluated\n\n**Returns** The value of the dirichlet function at `x`\n\n## Credits\n(c) 2014 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "_id": "dirichlet@0.0.0",
  "_from": "dirichlet@0.0.0"
}
