{
  "name": "gl-now",
  "version": "1.0.0",
  "description": "Create a WebGL context now!",
  "main": "index.js",
  "directories": {
    "example": "example"
  },
  "dependencies": {
    "game-shell": "~1.0.0",
    "webglew": "~0.0.0"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/gl-now.git"
  },
  "keywords": [
    "webgl",
    "create",
    "shell",
    "game"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "51f897e6ef26c85d1278248a28eab1f715b160de",
  "bugs": {
    "url": "https://github.com/mikolalysenko/gl-now/issues"
  },
  "readme": "gl-now\n======\nCreate a WebGL context right now!\n\nThis module is an extension of [game-shell](https://github.com/mikolalysenko/game-shell) that creates a WebGL enabled canvas and adds it to the specified container.\n\n## Example\n\n[Try this demo in your browser](http://mikolalysenko.github.io/gl-now/)\n\n```javascript\n//Initialize shell\nvar shell = require(\"gl-now\")()\n\nshell.on(\"gl-init\", function() {\n  var gl = shell.gl\n  \n  //Create fragment shader\n  var fs = gl.createShader(gl.FRAGMENT_SHADER)\n  gl.shaderSource(fs, [\n    \"void main() {\",\n      \"gl_FragColor = vec4(1, 0, 0, 1);\",\n    \"}\"].join(\"\\n\"))\n  gl.compileShader(fs)\n\n  //Create vertex shader\n  var vs = gl.createShader(gl.VERTEX_SHADER)\n  gl.shaderSource(vs, [\n    \"attribute vec3 position;\",\n    \"void main() {\",\n      \"gl_Position = vec4(position, 1.0);\",\n    \"}\"].join(\"\\n\"))\n  gl.compileShader(vs)\n\n  //Link\n  var shader = gl.createProgram()\n  gl.attachShader(shader, fs)\n  gl.attachShader(shader, vs)\n  gl.linkProgram(shader)\n  gl.useProgram(shader)\n  \n  //Create buffer\n  gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer())\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n    -1, 0, 0,\n    0, -1, 0,\n    1, 1, 0\n  ]), gl.STATIC_DRAW)\n  \n  //Set up attribute pointer\n  var position_attribute = gl.getAttribLocation(shader, \"position\")\n  gl.enableVertexAttribArray(position_attribute)\n  gl.vertexAttribPointer(position_attribute, 3, gl.FLOAT, false, 0, 0)\n})\n\nshell.on(\"gl-render\", function(t) {\n  var gl = shell.gl\n\n  //Draw arrays\n  gl.drawArrays(gl.TRIANGLES, 0, 3)\n})\n\nshell.on(\"gl-error\", function(e) {\n  throw new Error(\"WebGL not supported :(\")\n})\n```\n\nResult:\n\n<img src=\"https://raw.github.com/mikolalysenko/gl-now/master/screenshot.png\">\n\n\n## Install\n\n    npm install gl-now\n    \n# API\n\n### `var shell = require(\"gl-now\")([options])`\n\nOptions is an object that takes the same fields as in [game-shell](https://github.com/mikolalysenko/game-shell#var-shell--requiregame-shelloptions) with the following additions:\n\n* `clearFlags` a list of flags to clear on redraw.  (Default `gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT`)\n* `clearColor` a length 4 array representing background clear color.  (Defaults to element's background-color or else `[0.2, 0.4, 0.8, 1.0]`\n* `clearDepth` value to clear depth buffer to (Defaults to `1.0`)\n* `clearStencil` value to clear stencil buffer to (Defaults to `0`)\n* `extensions` a list of necessary WebGL extensions to support.  Vendor prefix optional.  You can access these extensions later using [webglew](https://npmjs.org/package/webglew)\n\n## Events\n\nIn addition to all the events inherited from [game-shell](https://github.com/mikolalysenko/game-shell#events), `gl-now` adds the following events:\n\n### `gl-init`\nCalled once the WebGL context is initialized\n\n### `gl-render([frame_time])`\nCalled at the start of the WebGL frame.\n\n### `gl-error(reason)`\nCalled if there was an error initializing webgl\n\n### `resize(width, height)`\nCalled when the WebGL window is resized\n\n\n## Properties\n\nFinally `gl-now` adds the following extra properties to `game-shell`:\n\n### `shell.gl`\n\nThe WebGL context\n\n### `shell.canvas`\n\nThe canvas object\n\n### `shell.width`\n\nThe width of the gl context\n\n### `shell.height`\n\nThe height of the context\n\n# Credits\n(c) 2013 Mikola Lysenko. MIT License\n",
  "homepage": "https://github.com/mikolalysenko/gl-now",
  "_id": "gl-now@1.0.0",
  "_from": "gl-now@1.0.0"
}
