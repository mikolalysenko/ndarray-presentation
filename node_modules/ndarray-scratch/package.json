{
  "name": "ndarray-scratch",
  "version": "1.0.0",
  "description": "Pooled memory for ndarrays",
  "main": "scratch.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "ndarray": "^1.0.11",
    "typedarray-pool": "^1.0.0",
    "ndarray-ops": "^1.2.1"
  },
  "devDependencies": {
    "tape": "~1.0.4"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/ndarray-scratch.git"
  },
  "keywords": [
    "ndarray",
    "pool",
    "memory",
    "typedarray",
    "scratch",
    "malloc",
    "free"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "65525b62e25c70355a09b362b7aa13183acd4964",
  "bugs": {
    "url": "https://github.com/mikolalysenko/ndarray-scratch/issues"
  },
  "readme": "ndarray-scratch\n===============\nA simple wrapper for typedarray-pool.  I got tired of manually constructing ndarrays from typedarrays, and so this module saves some keystrokes/sanity.\n\n## Example\n\n```javascript\nvar pool = require(\"ndarray-scratch\")\n\n\n//Create a temporary typed array\nvar x = pool.malloc([100,100])\n\n//Do stuff with x\n\n//Release x\npool.free(x)\n```\n\n## Install\n\n    npm install ndarray-scratch\n    \n\n## API\n\n```javascript\nvar pool = require(\"ndarray-pool\")\n```\n\n### `pool.malloc(shape[, dtype])`\nAllocates a temporary ndarray\n\n* `shape` is the shape of the array to allocate\n* `dtype` is the dtype of the array to allocate (default `double`)\n\n**Returns** a temporary ndarray\n\n### `pool.free(array)`\nReleases a temporary ndarray\n\n* `array` is the ndarray to release.\n\n### `pool.clone(array)`\nCreates a copy of an ndarray with row-major order.\n\n* `array` is an ndarray\n\n**Returns** A temporary copy of `array`\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License",
  "homepage": "https://github.com/mikolalysenko/ndarray-scratch",
  "_id": "ndarray-scratch@1.0.0",
  "_from": "ndarray-scratch@1.0.0"
}
