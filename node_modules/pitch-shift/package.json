{
  "name": "pitch-shift",
  "version": "0.0.0",
  "description": "Variable rate controllable audio pitch shifter",
  "main": "pitchshift.js",
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dependencies": {
    "detect-pitch": "~0.1.2",
    "frame-hop": "~0.0.0",
    "overlap-add": "~0.0.0",
    "typedarray-pool": "~0.1.1"
  },
  "devDependencies": {
    "plotter": "~0.4.1",
    "domready": "~0.2.11"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/pitch-shift.git"
  },
  "keywords": [
    "pitch",
    "shift",
    "detect",
    "autotune",
    "audio",
    "digital",
    "signal",
    "processing",
    "frequency",
    "time",
    "scale",
    "stretch"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "c570d7124dd796d1518db743123c21600b09015f",
  "bugs": {
    "url": "https://github.com/mikolalysenko/pitch-shift/issues"
  },
  "readme": "pitch-shift\n===========\nA variable speed pitch shifter written in JavaScript.\n\n[Here is a demo you can try in your browser!](http://mikolalysenko.github.io/pitch-shift/)\n\n## Example\n\nHere is a simplified psuedo-example:\n\n```javascript\n//Create a pitch shifting object\nvar shifter = require(\"pitch-shift\")(\n  function onData(frame) {\n    //Play / write out frame.  Called whenver data is ready\n  },\n  function onTune(t, pitch) {\n  \n    console.log(\"Got pitch \", pitch, \" at time \", t)\n    \n    //This is the amount to scale the sample by\n    return 1.0\n  })\n  \n\n//Feed some data to the shifter\nshifter(new Float32Array([1, 1, 0, 1, 0, 0, 0 /* ... etc */ ]))\n```\n\nFor a more complete working example, check out test/test.js or example/index.js\n\n## Install\n\n    npm install pitch-shift\n\n### `require(\"pitch-shift\")(onData, onTune, options)`\nCreates a pitch shifting function\n\n* `onData(frame)` Called when a pitch shifted frame is ready.\n* `onTune(t, pitch)` Called when a frame of audio needs to be processed.\n* `options` An object full of options to pass to the pitch shifter\n\n    + `frameSize` size of frame to process (default `2048`)\n    + `hopSize` the distance between frames in samples.  Must divide frame size.  (default `frameSize/4`)\n    + `dataSize` maximal allowable size of a data frame (default `frame_size`)\n    + `sampleRate` Conversion factor from samples to seconds. (default `44100`)\n    + `analysiWindow` analysis window.  must be a typed array with length equl to frame size (defaults to Hann window)\n    + `synthesisWindow` synthesis window.  must be a typed array with length equal to frame size (defaults to Hann window)\n    + `threshold` peak detection threshold.  Set to 1.0 to always take maximum, otherwise set lower to detect half tones.  (default `0.9`)\n    + `minPeriod` Minimal resolvable period.  (default `sampleRate/400`)\n\n**Returns** A function that you call with a frame of data.\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License\n\n\nGettysburg adress reading by Britton Rea.  Recording obtained from the Internet archive.  http://archive.org/details/GettysburgAddress\n\n",
  "homepage": "https://github.com/mikolalysenko/pitch-shift",
  "_id": "pitch-shift@0.0.0",
  "_from": "pitch-shift@"
}
