{
  "name": "glsl-deparser",
  "version": "0.0.2",
  "description": "through stream that translates glsl-parser AST nodes into working glsl code",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "cssauron-glsl": "X.X.X",
    "through": "~1.1.2"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisdickinson/glsl-deparser.git"
  },
  "keywords": [
    "glsl",
    "deparser",
    "stream"
  ],
  "author": {
    "name": "Chris Dickinson",
    "email": "chris@neversaw.us"
  },
  "license": "MIT",
  "readme": "# glsl-deparser\n\n```javascript\n\nvar Path = require('path')\n\nvar tokenizer = require('glsl-tokenizer')()\n  , parser = require('glsl-parser')\n  , deparser = require('glsl-deparser')\n\nprocess.stdin\n  .pipe(tokenizer)\n  .pipe(parser())\n  .pipe(deparser())             // <-- deparser!\n  .pipe(process.stdout)\n\nprocess.stdin.resume()\n\n```\n\ntransform a stream of [glsl-parser](https://github.com/chrisdickinson/glsl-parser) AST nodes\ninto strings.\n\nonly operates on top-level statements emitted by `glsl-parser`, so the code it emits is executable\nby webgl.\n\n# api\n\n### deparser(whitespace_enabled=true, tab_text='  ')\n\nCreates a `readable`/`writable` stream.\n\nIf no args are provided, `whitespace` is assumed to be enabled, and the tab text will be `'  '`.\n\nIf you pass `false` for the first arg, only syntactically significant whitespace will be emitted (it'll behave like a poor man's minifier).\n\nIf you pass `true` and tab text, that tab text will be used to indent code.\n\n# note\n\nthe big caveat is that preprocessor if statements (`#if*`, `#endif`) won't work unless\neach branch produces a parseable tree.\n\n# license\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/chrisdickinson/glsl-deparser/issues"
  },
  "homepage": "https://github.com/chrisdickinson/glsl-deparser",
  "_id": "glsl-deparser@0.0.2",
  "_from": "glsl-deparser@0.0.2"
}
